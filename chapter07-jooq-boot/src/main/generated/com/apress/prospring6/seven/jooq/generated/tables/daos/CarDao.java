/*
 * This file is generated by jOOQ.
 */
package com.apress.prospring6.seven.jooq.generated.tables.daos;


import com.apress.prospring6.seven.jooq.generated.tables.Car;
import com.apress.prospring6.seven.jooq.generated.tables.records.CarRecord;

import java.time.LocalDate;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CarDao extends DAOImpl<CarRecord, com.apress.prospring6.seven.jooq.generated.tables.pojos.Car, Long> {

    /**
     * Create a new CarDao without any configuration
     */
    public CarDao() {
        super(Car.CAR, com.apress.prospring6.seven.jooq.generated.tables.pojos.Car.class);
    }

    /**
     * Create a new CarDao with an attached configuration
     */
    public CarDao(Configuration configuration) {
        super(Car.CAR, com.apress.prospring6.seven.jooq.generated.tables.pojos.Car.class, configuration);
    }

    @Override
    public Long getId(com.apress.prospring6.seven.jooq.generated.tables.pojos.Car object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.apress.prospring6.seven.jooq.generated.tables.pojos.Car> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Car.CAR.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<com.apress.prospring6.seven.jooq.generated.tables.pojos.Car> fetchById(Long... values) {
        return fetch(Car.CAR.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public com.apress.prospring6.seven.jooq.generated.tables.pojos.Car fetchOneById(Long value) {
        return fetchOne(Car.CAR.ID, value);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public Optional<com.apress.prospring6.seven.jooq.generated.tables.pojos.Car> fetchOptionalById(Long value) {
        return fetchOptional(Car.CAR.ID, value);
    }

    /**
     * Fetch records that have <code>AGE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.apress.prospring6.seven.jooq.generated.tables.pojos.Car> fetchRangeOfAge(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Car.CAR.AGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>AGE IN (values)</code>
     */
    public List<com.apress.prospring6.seven.jooq.generated.tables.pojos.Car> fetchByAge(Integer... values) {
        return fetch(Car.CAR.AGE, values);
    }

    /**
     * Fetch records that have <code>LICENSE_PLATE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.apress.prospring6.seven.jooq.generated.tables.pojos.Car> fetchRangeOfLicensePlate(String lowerInclusive, String upperInclusive) {
        return fetchRange(Car.CAR.LICENSE_PLATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>LICENSE_PLATE IN (values)</code>
     */
    public List<com.apress.prospring6.seven.jooq.generated.tables.pojos.Car> fetchByLicensePlate(String... values) {
        return fetch(Car.CAR.LICENSE_PLATE, values);
    }

    /**
     * Fetch records that have <code>MANUFACTURE_DATE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.apress.prospring6.seven.jooq.generated.tables.pojos.Car> fetchRangeOfManufactureDate(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(Car.CAR.MANUFACTURE_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>MANUFACTURE_DATE IN (values)</code>
     */
    public List<com.apress.prospring6.seven.jooq.generated.tables.pojos.Car> fetchByManufactureDate(LocalDate... values) {
        return fetch(Car.CAR.MANUFACTURE_DATE, values);
    }

    /**
     * Fetch records that have <code>MANUFACTURER BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.apress.prospring6.seven.jooq.generated.tables.pojos.Car> fetchRangeOfManufacturer(String lowerInclusive, String upperInclusive) {
        return fetchRange(Car.CAR.MANUFACTURER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>MANUFACTURER IN (values)</code>
     */
    public List<com.apress.prospring6.seven.jooq.generated.tables.pojos.Car> fetchByManufacturer(String... values) {
        return fetch(Car.CAR.MANUFACTURER, values);
    }

    /**
     * Fetch records that have <code>version BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.apress.prospring6.seven.jooq.generated.tables.pojos.Car> fetchRangeOfVersion(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Car.CAR.VERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<com.apress.prospring6.seven.jooq.generated.tables.pojos.Car> fetchByVersion(Integer... values) {
        return fetch(Car.CAR.VERSION, values);
    }
}
