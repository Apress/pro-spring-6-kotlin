/*
 * This file is generated by jOOQ.
 */
package com.apress.prospring6.seven.jooq.generated.tables.daos;


import com.apress.prospring6.seven.jooq.generated.tables.Album;
import com.apress.prospring6.seven.jooq.generated.tables.records.AlbumRecord;

import java.time.LocalDate;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AlbumDao extends DAOImpl<AlbumRecord, com.apress.prospring6.seven.jooq.generated.tables.pojos.Album, Integer> {

    /**
     * Create a new AlbumDao without any configuration
     */
    public AlbumDao() {
        super(Album.ALBUM, com.apress.prospring6.seven.jooq.generated.tables.pojos.Album.class);
    }

    /**
     * Create a new AlbumDao with an attached configuration
     */
    public AlbumDao(Configuration configuration) {
        super(Album.ALBUM, com.apress.prospring6.seven.jooq.generated.tables.pojos.Album.class, configuration);
    }

    @Override
    public Integer getId(com.apress.prospring6.seven.jooq.generated.tables.pojos.Album object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.apress.prospring6.seven.jooq.generated.tables.pojos.Album> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Album.ALBUM.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<com.apress.prospring6.seven.jooq.generated.tables.pojos.Album> fetchById(Integer... values) {
        return fetch(Album.ALBUM.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public com.apress.prospring6.seven.jooq.generated.tables.pojos.Album fetchOneById(Integer value) {
        return fetchOne(Album.ALBUM.ID, value);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public Optional<com.apress.prospring6.seven.jooq.generated.tables.pojos.Album> fetchOptionalById(Integer value) {
        return fetchOptional(Album.ALBUM.ID, value);
    }

    /**
     * Fetch records that have <code>VERSION BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.apress.prospring6.seven.jooq.generated.tables.pojos.Album> fetchRangeOfVersion(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Album.ALBUM.VERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>VERSION IN (values)</code>
     */
    public List<com.apress.prospring6.seven.jooq.generated.tables.pojos.Album> fetchByVersion(Integer... values) {
        return fetch(Album.ALBUM.VERSION, values);
    }

    /**
     * Fetch records that have <code>SINGER_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.apress.prospring6.seven.jooq.generated.tables.pojos.Album> fetchRangeOfSingerId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Album.ALBUM.SINGER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>SINGER_ID IN (values)</code>
     */
    public List<com.apress.prospring6.seven.jooq.generated.tables.pojos.Album> fetchBySingerId(Integer... values) {
        return fetch(Album.ALBUM.SINGER_ID, values);
    }

    /**
     * Fetch records that have <code>TITLE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.apress.prospring6.seven.jooq.generated.tables.pojos.Album> fetchRangeOfTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(Album.ALBUM.TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>TITLE IN (values)</code>
     */
    public List<com.apress.prospring6.seven.jooq.generated.tables.pojos.Album> fetchByTitle(String... values) {
        return fetch(Album.ALBUM.TITLE, values);
    }

    /**
     * Fetch records that have <code>RELEASE_DATE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.apress.prospring6.seven.jooq.generated.tables.pojos.Album> fetchRangeOfReleaseDate(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(Album.ALBUM.RELEASE_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>RELEASE_DATE IN (values)</code>
     */
    public List<com.apress.prospring6.seven.jooq.generated.tables.pojos.Album> fetchByReleaseDate(LocalDate... values) {
        return fetch(Album.ALBUM.RELEASE_DATE, values);
    }
}
